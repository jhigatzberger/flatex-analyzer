import { z } from "zod";

export const ISINQuerySchema = z.object({
  isin: z.string().min(8).max(12),
});

export const QuoteSearchSchema = z.object({
  exchange: z.string().optional(),
  shortname: z.string().optional(),
  quoteType: z.string(),
  symbol: z.string(),
  index: z.string().optional(),
  score: z.number().optional(),
  typeDisp: z.string().optional(),
  longname: z.string().optional(),
  exchDisp: z.string().optional(),
  sector: z.string().optional(),
  sectorDisp: z.string().optional(),
  industry: z.string().optional(),
  industryDisp: z.string().optional(),
  isYahooFinance: z.boolean().optional(),
});

const OfficerSchema = z.object({
  age: z.number().optional(),
  exercisedValue: z.number(),
  fiscalYear: z.number(),
  maxAge: z.number(),
  name: z.string(),
  title: z.string(),
  totalPay: z.number().optional(),
  unexercisedValue: z.number(),
  yearBorn: z.number().optional()
});

const CorporateActionSchema = z.object({
  header: z.string(),
  message: z.string(),
  meta: z.object({
    amount: z.string(),
    dateEpochMs: z.number(),
    eventType: z.string()
  })
});

export const FullTickerDataSchema = z.object({
  "52WeekChange": z.number(),
  SandP52WeekChange: z.number(),
  address1: z.string(),
  ask: z.number(),
  askSize: z.number(),
  auditRisk: z.number(),
  averageAnalystRating: z.string(),
  averageDailyVolume10Day: z.number(),
  averageDailyVolume3Month: z.number(),
  averageVolume: z.number(),
  averageVolume10days: z.number(),
  beta: z.number(),
  bid: z.number(),
  bidSize: z.number(),
  boardRisk: z.number(),
  bookValue: z.number(),
  city: z.string(),
  companyOfficers: z.array(OfficerSchema),
  compensationAsOfEpochDate: z.number(),
  compensationRisk: z.number(),
  corporateActions: z.array(CorporateActionSchema),
  country: z.string(),
  cryptoTradeable: z.boolean(),
  currency: z.string(),
  currentPrice: z.number(),
  currentRatio: z.number(),
  customPriceAlertConfidence: z.string(),
  dayHigh: z.number(),
  dayLow: z.number(),
  debtToEquity: z.number(),
  dividendDate: z.number(),
  dividendRate: z.number(),
  dividendYield: z.number(),
  earningsCallTimestampEnd: z.number(),
  earningsCallTimestampStart: z.number(),
  earningsGrowth: z.number(),
  earningsQuarterlyGrowth: z.number(),
  earningsTimestamp: z.number(),
  earningsTimestampEnd: z.number(),
  earningsTimestampStart: z.number(),
  ebitda: z.number(),
  ebitdaMargins: z.number(),
  enterpriseToEbitda: z.number(),
  enterpriseToRevenue: z.number(),
  enterpriseValue: z.number(),
  epsCurrentYear: z.number(),
  epsForward: z.number(),
  epsTrailingTwelveMonths: z.number(),
  esgPopulated: z.boolean(),
  exDividendDate: z.number(),
  exchange: z.string(),
  exchangeDataDelayedBy: z.number(),
  exchangeTimezoneName: z.string(),
  exchangeTimezoneShortName: z.string(),
  executiveTeam: z.array(z.any()),
  fiftyDayAverage: z.number(),
  fiftyDayAverageChange: z.number(),
  fiftyDayAverageChangePercent: z.number(),
  fiftyTwoWeekChangePercent: z.number(),
  fiftyTwoWeekHigh: z.number(),
  fiftyTwoWeekHighChange: z.number(),
  fiftyTwoWeekHighChangePercent: z.number(),
  fiftyTwoWeekLow: z.number(),
  fiftyTwoWeekLowChange: z.number(),
  fiftyTwoWeekLowChangePercent: z.number(),
  fiftyTwoWeekRange: z.string(),
  financialCurrency: z.string(),
  firstTradeDateMilliseconds: z.number(),
  fiveYearAvgDividendYield: z.number(),
  floatShares: z.number(),
  forwardEps: z.number(),
  forwardPE: z.number(),
  freeCashflow: z.number(),
  fullExchangeName: z.string(),
  fullTimeEmployees: z.number(),
  gmtOffSetMilliseconds: z.number(),
  governanceEpochDate: z.number(),
  grossMargins: z.number(),
  grossProfits: z.number(),
  hasPrePostMarketData: z.boolean(),
  heldPercentInsiders: z.number(),
  heldPercentInstitutions: z.number(),
  impliedSharesOutstanding: z.number(),
  industry: z.string(),
  industryDisp: z.string(),
  industryKey: z.string(),
  irWebsite: z.string(),
  isEarningsDateEstimate: z.boolean(),
  language: z.string(),
  lastDividendDate: z.number(),
  lastDividendValue: z.number(),
  lastFiscalYearEnd: z.number(),
  longBusinessSummary: z.string(),
  longName: z.string(),
  market: z.string(),
  marketCap: z.number(),
  marketState: z.string(),
  maxAge: z.number(),
  messageBoardId: z.string(),
  mostRecentQuarter: z.number(),
  netIncomeToCommon: z.number(),
  nextFiscalYearEnd: z.number(),
  numberOfAnalystOpinions: z.number(),
  open: z.number(),
  operatingCashflow: z.number(),
  operatingMargins: z.number(),
  overallRisk: z.number(),
  payoutRatio: z.number(),
  previousClose: z.number(),
  priceEpsCurrentYear: z.number(),
  priceHint: z.number(),
  priceToBook: z.number(),
  priceToSalesTrailing12Months: z.number(),
  profitMargins: z.number(),
  quickRatio: z.number(),
  quoteSourceName: z.string(),
  quoteType: z.string(),
  recommendationKey: z.string(),
  recommendationMean: z.number(),
  region: z.string(),
  regularMarketChange: z.number(),
  regularMarketChangePercent: z.number(),
  regularMarketDayHigh: z.number(),
  regularMarketDayLow: z.number(),
  regularMarketDayRange: z.string(),
  regularMarketOpen: z.number(),
  regularMarketPreviousClose: z.number(),
  regularMarketPrice: z.number(),
  regularMarketTime: z.number(),
  regularMarketVolume: z.number(),
  returnOnAssets: z.number(),
  returnOnEquity: z.number(),
  revenueGrowth: z.number(),
  revenuePerShare: z.number(),
  sector: z.string(),
  sectorDisp: z.string(),
  sectorKey: z.string(),
  shareHolderRightsRisk: z.number(),
  sharesOutstanding: z.number(),
  shortName: z.string(),
  sourceInterval: z.number(),
  symbol: z.string(),
  targetHighPrice: z.number(),
  targetLowPrice: z.number(),
  targetMeanPrice: z.number(),
  targetMedianPrice: z.number(),
  totalCash: z.number(),
  totalCashPerShare: z.number(),
  totalDebt: z.number(),
  totalRevenue: z.number(),
  tradeable: z.boolean(),
  trailingAnnualDividendRate: z.number(),
  trailingAnnualDividendYield: z.number(),
  trailingEps: z.number(),
  trailingPE: z.number(),
  trailingPegRatio: z.null(),
  triggerable: z.boolean(),
  twoHundredDayAverage: z.number(),
  twoHundredDayAverageChange: z.number(),
  twoHundredDayAverageChangePercent: z.number(),
  typeDisp: z.string(),
  volume: z.number(),
  website: z.string(),
  zip: z.string()
});

export type FullTickerData = z.infer<typeof FullTickerDataSchema>;